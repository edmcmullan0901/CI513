import sys
import os
import pandas as pd
import numpy as np

from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import (
    mean_absolute_error, mean_squared_error, r2_score, max_error
)

# Add root to sys.path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from src.feature_engineering import prepare_training_data

# Load & Sample Data
data_path = os.path.join(os.path.dirname(__file__), "..", "data", "processed_data.csv")
df = pd.read_csv(data_path)
df_sampled = df.sample(n=50000, random_state=42)  # interchangeable sample size
X, y = prepare_training_data(df_sampled)

# Train/Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Random Forest Model
forest = RandomForestRegressor(n_estimators=100, max_depth=None, random_state=42)
forest.fit(X_train, y_train)

# Predict & Evaluate
y_pred = forest.predict(X_test)

mae = mean_absolute_error(y_test, y_pred)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)
mbe = (y_pred - y_test).mean()
max_err = max_error(y_test, y_pred)

# Results
print("Random Forest Regression Results:")
print(f"MAE:           {mae:.4f}")
print(f"RMSE:          {rmse:.4f}")
print(f"RÂ²:            {r2:.4f}")
print(f"MBE:           {mbe:.4f}")
print(f"Max Error:     {max_err:.4f}")
